<!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {
fill: none;
stroke: #999;
stroke-width: 1.5px;
}
.node circle
{
fill: steelblue;
stroke: #fff;
stroke-width: 1.5px;
}
.node text
{
pointer-events: none;
font: 10px sans-serif;
}
</style>
<body>
<script src = "http://d3js.org/d3.v3.min.js"></script>

<script>
var width = 900,
	height = 1080;

var svg = d3.select("body").append("svg")
.attr("width", width)
.attr("height", height);


var force = d3.layout.force()
.gravity(1)
.distance(100)
.charge(-5000)
.size([width, height]);



d3.json("pakistani_leafs.json", function(error, json) {
force
.nodes(json.nodes)
.links(json.links)
.start();

var color = d3.scale.category20();

var link = svg.selectAll(".link")
.data(json.links)
.enter().append("line")
.attr("class", "link");

var node = svg.selectAll(".node")
.data(json.nodes)
.enter().append("g")
.attr("class", "node")
.call(force.drag);

node.append("circle")
.attr("r", function(d) { return Math.log(d.degree)*3 } )
.style("fill", function(d) { return color(d.degree); });

node.append("text")
.attr("dx", 12)
.attr("dy", ".35em")
.text(function(d) { return d.id });

force.on("tick", function()
{
link.attr("x1", function(d) { return d.source.x; })
.attr("y1", function(d) { return d.source.y; })
.attr("x2", function(d) { return d.target.x; })
.attr("y2", function(d) { return d.target.y; });
node.attr("transform", function(d)
{
return "translate(" + d.x + "," + d.y + ")";
})
});
});
</script>
